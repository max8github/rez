<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.rezhub.reservation</groupId>
    <artifactId>reservation</artifactId>
    <version>0.4</version>
  </parent>

  <groupId>com.rezhub</groupId>
  <artifactId>reservation</artifactId>
  <version>0.8</version>
  <packaging>jar</packaging>

  <name>reservation</name>
  <properties>
    <dockerImage>registry.hub.docker.com/max8github/${project.artifactId}</dockerImage>
    <dockerTag>${project.version}-${maven.build.timestamp}</dockerTag>
    <mainClass>com.rezhub.reservation.Main</mainClass>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>

    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.7.0</version>
      </extension>
    </extensions>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
              <configuration>
                <transformers combine.children="append">
                  <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                    <resource>reference.conf</resource>
                  </transformer>
                </transformers>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>${jdk.target}</source>
          <target>${jdk.target}</target>
          <compilerArgs>
            <arg>-Xlint:deprecation</arg>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.39.1</version>
        <configuration>
          <images>
            <image>
              <name>${dockerImage}:%l</name>
              <build>
                <!-- Base Docker image which contains jre-->
                <from>docker.io/library/eclipse-temurin:${jdk.target}-alpine</from>
                <createImageOptions>
                  <platform>linux/amd64</platform>
                </createImageOptions>
                <tags>
                  <!-- tag for generated image -->
                  <tag>${dockerTag}</tag>
                </tags>
                <ports>
                  <!-- expose port in Docker container -->
                  <port>8080</port>
                </ports>
                <assembly>
                  <!-- NOTE: (optional) switch to "artifact-with-dependencies" to show dependencies library-->
                  <descriptorRef>artifact</descriptorRef>
                </assembly>
                <entryPoint>
                  <arg>java</arg>
                  <arg>-jar</arg>
                  <arg>/maven/${project.build.finalName}.jar</arg>
                </entryPoint>
              </build>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>build-docker-image</id>
            <phase>install</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
          <execution>
            <id>push-docker-image</id>
            <phase>deploy</phase>
            <goals>
              <goal>push</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <executable>java</executable>
          <arguments>
            <argument>-classpath</argument>
            <classpath/>
            <argument>-Dlogging.config=src/main/resources/logback-dev-mode.xml</argument>
            <argument>${mainClass}</argument>
          </arguments>
          <environmentVariables>
            <!-- needed for the proxy to access the user function on all platforms -->
            <HOST>0.0.0.0</HOST>
          </environmentVariables>
        </configuration>
      </plugin>

      <plugin>
        <!-- configure src/it/java and src/it/resources -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build-helper-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>add-integration-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/it/java</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-integration-test-resource</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/it/resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <excludes>
            <!-- ignore integration test classes -->
            <exclude>**/*IntegrationTest</exclude>
          </excludes>
          <environmentVariables>
<!--            See Manage Secrets at https://docs.kalix.io/projects/secrets.html -->
            <INSTALL_TOKEN>t0k3n</INSTALL_TOKEN>
          </environmentVariables>
        </configuration>
      </plugin>

      <plugin>
        <groupId>io.kalix</groupId>
        <artifactId>kalix-maven-plugin</artifactId>
        <version>${kalix-sdk.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>deploy</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <dockerImage>${dockerImage}:${dockerTag}</dockerImage>
          <mainClass>${mainClass}</mainClass>
          <integrationTestSourceDirectory>src/it/java</integrationTestSourceDirectory>
        </configuration>
      </plugin>
      <plugin>
       <groupId>org.springframework.boot</groupId>
       <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
            <systemPropertyVariables>
                <logging.config>src/main/resources/logback-dev-mode.xml</logging.config>
                <kalix.user-function-interface>0.0.0.0</kalix.user-function-interface>
            </systemPropertyVariables>
            <excludes>
              <exclude>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
              </exclude>
            </excludes>
          </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>3.0.0-M1</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- run Integration Tests in src/it/java with `mvn verify -Pit`-->
      <id>it</id>
      <build>
        <plugins>
          <plugin>
            <!-- run *IntegrationTest with failsafe -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.22.2</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>**/*IntegrationTest</include>
                  </includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>com.rezhub.reservation</groupId>
      <artifactId>stringparser</artifactId>
      <version>0.5</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.rezhub.reservation</groupId>
      <artifactId>calendarstub</artifactId>
      <version>0.5</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.rezhub.reservation</groupId>
      <artifactId>notifierstub</artifactId>
      <version>0.5</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.rezhub.reservation</groupId>
      <artifactId>spi</artifactId>
      <version>0.5</version>
    </dependency>
    <dependency>
      <groupId>io.kalix</groupId>
      <artifactId>kalix-spring-boot-starter</artifactId>
      <version>${kalix-sdk.version}</version>
    </dependency>
    <dependency>
      <groupId>io.kalix</groupId>
      <artifactId>kalix-spring-boot-starter-test</artifactId>
      <version>${kalix-sdk.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>4.1.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
  </dependencies>
</project>
