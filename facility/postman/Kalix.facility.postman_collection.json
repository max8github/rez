{
	"info": {
		"_postman_id": "a6bf1339-9838-4b06-a325-f076961a984d",
		"name": "Kalix Facility",
		"description": "curl commands from [tutorial](https://docs.kalix.io/java/quickstart/cr-value-entity-java.html)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1644939"
	},
	"item": [
		{
			"name": "Create Facility",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function create_UUID(){",
							"    var dt = new Date().getTime();",
							"    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {",
							"        var r = (dt + Math.random()*16)%16 | 0;",
							"        dt = Math.floor(dt/16);",
							"        return (c=='x' ? r :(r&0x3|0x8)).toString(16);",
							"    });",
							"    uuid = uuid.substring(0, 8);",
							"    return uuid;",
							"}",
							"",
							"var facility_id = create_UUID();",
							"postman.setEnvironmentVariable(\"facility_id\", facility_id);",
							"",
							"",
							"var facilityName = pm.variables.replaceIn('{{$randomLoremWord}}');",
							"var resourceName = pm.variables.replaceIn('{{$randomLoremWord}}');",
							"",
							"var newFacilityName = pm.variables.replaceIn('{{$randomLoremWord}}');",
							"",
							"var street = pm.variables.replaceIn('{{$randomStreetName}}');",
							"var city = pm.variables.replaceIn('{{$randomCity}}');",
							"",
							"console.info(\"Entity id is: \"+ facility_id);",
							"console.info(\"Facilityname is: \"+ facilityName);",
							"console.info(\"New facilityName is: \"+ newFacilityName);",
							"console.info(\"Street is: \"+ street);",
							"console.info(\"City is: \"+ city);",
							"console.info(\"Resource is: \"+ resourceName);",
							"",
							"pm.variables.set(\"newFacilityName\", newFacilityName);",
							"pm.variables.set(\"facilityName\", facilityName);",
							"pm.variables.set(\"street\", street);",
							"pm.variables.set(\"city\", city);",
							"pm.variables.set(\"resourceName\", resourceName);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//pm.environment.set(\"facility_id\", pm.response.text());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{facilityName}}\",\n    \"address\": {\n      \"street\": \"{{street}}\",\n      \"city\": \"{{city}}\"\n    },\n    \"resources\": [\n      {\n          \"resourceId\": \"{{resourceName}}\",\n          \"size\": 24\n      }\n    ]\n  }"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/facility/{{facility_id}}/create",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"facility",
						"{{facility_id}}",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change facility address",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var street = pm.variables.replaceIn('{{$randomStreetName}}');",
							"var city = pm.variables.replaceIn('{{$randomCity}}');",
							"",
							"console.info(\"Street is: \"+ street);",
							"console.info(\"City is: \"+ city);",
							"",
							"pm.variables.set(\"street\", street);",
							"pm.variables.set(\"city\", city);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n      \"street\": \"{{street}}\",\n      \"city\": \"{{city}}\"\n\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/facility/{{facility_id}}/changeAddress",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"facility",
						"{{facility_id}}",
						"changeAddress"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change facility name",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var newFacilityName = pm.variables.replaceIn('{{$randomLoremWord}}');",
							"console.info(\"New facilityName is: \"+ newFacilityName);",
							"pm.variables.set(\"newFacilityName\", newFacilityName);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//pm.environment.set(\"facility_id\", pm.response.text());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://{{host}}:{{port}}/facility/{{facility_id}}/rename/{{newFacilityName}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"facility",
						"{{facility_id}}",
						"rename",
						"{{newFacilityName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create&register resource",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var resourceName = pm.variables.replaceIn('{{$randomLoremWord}}');",
							"var timeSlotsSize = pm.variables.replaceIn('{{$randomInt}}');",
							"",
							"console.info(\"Resource is: \"+ resourceName);",
							"console.info(\"Resource size is: \"+ timeSlotsSize);",
							"",
							"pm.variables.set(\"resourceName\", resourceName);",
							"pm.variables.set(\"timeSlotsSize\", timeSlotsSize);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"resourceName\": \"{{resourceName}}\",\n    \"size\": {{timeSlotsSize}}\n}\n"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/facility/{{facility_id}}/createAndRegisterResource",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"facility",
						"{{facility_id}}",
						"createAndRegisterResource"
					]
				},
				"description": "Creates a new Resource entity and adds its entity id into Facility"
			},
			"response": []
		},
		{
			"name": "Get Facility",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/facility/{{facility_id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"facility",
						"{{facility_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register resource id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function create_UUID(){",
							"    var dt = new Date().getTime();",
							"    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {",
							"        var r = (dt + Math.random()*16)%16 | 0;",
							"        dt = Math.floor(dt/16);",
							"        return (c=='x' ? r :(r&0x3|0x8)).toString(16);",
							"    });",
							"    uuid = uuid.substring(0, 8);",
							"    return uuid;",
							"}",
							"",
							"var resourceId = create_UUID();",
							"var facility_id = pm.variables.get(\"facility_id\");",
							"",
							"console.info(\"Resource id is: \"+ resourceId);",
							"console.info(\"Facility id is: \"+ facility_id);",
							"",
							"pm.variables.set(\"resource_id\", resourceId);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://{{host}}:{{port}}/facility/{{facility_id}}/resource/{{resource_id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"facility",
						"{{facility_id}}",
						"resource",
						"{{resource_id}}"
					]
				},
				"description": "Registers resource id with Facility.\n\nNote: this is not API. Registration should be only done through the aggregate root, which is \\`Facility\\`."
			},
			"response": []
		},
		{
			"name": "Create Resource",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function create_UUID(){",
							"    var dt = new Date().getTime();",
							"    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {",
							"        var r = (dt + Math.random()*16)%16 | 0;",
							"        dt = Math.floor(dt/16);",
							"        return (c=='x' ? r :(r&0x3|0x8)).toString(16);",
							"    });",
							"    uuid = uuid.substring(0, 8);",
							"    return uuid;",
							"}",
							"",
							"var resource_id = create_UUID();",
							"postman.setEnvironmentVariable(\"resource_id\", resource_id);",
							"",
							"var resourceName = pm.variables.replaceIn('{{$randomLoremWord}}');",
							"var timeSlotsSize = pm.variables.replaceIn('{{$randomInt}}');",
							"",
							"console.info(\"Resource id is: \"+ resource_id);",
							"console.info(\"Resource is: \"+ resourceName);",
							"console.info(\"Resource size is: \"+ timeSlotsSize);",
							"",
							"pm.variables.set(\"resource_id\", resource_id);",
							"pm.variables.set(\"resourceName\", resourceName);",
							"pm.variables.set(\"timeSlotsSize\", timeSlotsSize);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"facilityId\": {{facility_id}},\n    \"resourceDTO\": {\n        \"resourceName\": \"{{resourceName}}\",\n        \"size\": {{timeSlotsSize}}\n    }\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/resource/{{resource_id}}/create",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"resource",
						"{{resource_id}}",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Resource",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/resource/{{resource_id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"resource",
						"{{resource_id}}"
					]
				}
			},
			"response": []
		}
	]
}